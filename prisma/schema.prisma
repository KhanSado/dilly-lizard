generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
  id       String    @id @default(uuid())
  name     String @db.VarChar(100)
  password String @db.VarChar(100)
  username String @unique @db.VarChar(45)
  email    String @unique @db.VarChar(45)
  book     Book[]
  authors  Author[]
  gender   Gender[]
  publisherCompany PublishingCompany[]
}

model Book {
  id            String    @id @default(uuid())
  title         String    @db.VarChar(75)
  subtitle      String?   @db.VarChar(75)
  sumary        String    @db.VarChar(150)
  isReading     Boolean   @db.Boolean
  readed        Boolean   @db.Boolean
  bookCover     String?   @db.VarChar(150)

  usersId       String
  user_owner    Users?    @relation(fields: [usersId], references: [id])

  authorId      String?
  author        Author?   @relation(fields: [authorId], references: [id])

  genderId      String?     
  gender        Gender?   @relation(fields: [genderId], references: [id])

  publisherCompanyId    String?
  publisherCompany        PublishingCompany?    @relation(fields: [publisherCompanyId], references: [id])
}

model Author {
  id            String    @id @default(uuid())
  name          String    @db.VarChar(45)
  lastname      String    @db.VarChar(45)
  usersId       String
  user_owner    Users?    @relation(fields: [usersId], references: [id])
  book          Book[]
} 

model Gender {
  id            String    @id @default(uuid())
  name          String    @db.VarChar(45)
  description   String    @db.VarChar(45)
  usersId       String
  user_owner    Users?    @relation(fields: [usersId], references: [id])
  book          Book[]
}

model PublishingCompany {
  id            String    @id @default(uuid())
  name          String    @db.VarChar(75)
  usersId       String
  user_owner    Users?    @relation(fields: [usersId], references: [id])
  book          Book[]
}
